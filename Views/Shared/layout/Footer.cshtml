@* <script src="../js/table.js"></script> *@
<script src="../assets/libs/jquery/dist/jquery.min.js"></script>
<!-- Bootstrap tether Core JavaScript -->
<script src="../assets/libs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<!-- slimscrollbar scrollbar JavaScript -->
<script src="../assets/libs/perfect-scrollbar/dist/perfect-scrollbar.jquery.min.js"></script>
<script src="../assets/extra-libs/sparkline/sparkline.js"></script>
<!--Wave Effects -->
<script src="../dist/js/waves.js"></script>
<!--Menu sidebar -->
<script src="../dist/js/sidebarmenu.js"></script>
<!--Custom JavaScript -->
<script src="../dist/js/custom.min.js"></script>
<!-- this page js -->
<script src="../js/autocomplete.js"></script>
<script src="../assets/extra-libs/multicheck/datatable-checkbox-init.js"></script>
<script src="../assets/extra-libs/multicheck/jquery.multicheck.js"></script>
<script src="../assets/extra-libs/DataTables/datatables.min.js"></script>
<script src="../assets/libs/select2/dist/js/select2.full.min.js"></script>
<script src="../assets/libs/select2/dist/js/select2.min.js"></script>
<script src="../assets/libs/toastr/toastr.js"></script>
<script src="../assets/libs/toastr/build/toastr.min.js"></script>
<script src="../js/sweet-alert.js"></script>
<script src="../js/pagination.min.js"></script>
<script src="../js/pagination.js"></script>
<script src="../js/multiple-droplist.js"></script>
<script src="../js/numeral.js"></script>
<script src="../js/accounting.js"></script>

<script>
    @* let host = "http://192.168.0.15:5221"; *@
    let host = "http://localhost:5221";
</script>
<script>
    function convertDateTime(isoTime, time){
        @* let getDate = isoTime.split("T")[0].split("-").reverse().join("/"); *@
        let getDate = new Date(isoTime).getDate()< 10 ? `0${new Date(isoTime).getDate()}` : new Date(isoTime).getDate();
        let getMonth = new Date(isoTime).getMonth()+1 < 10?`0${new Date(isoTime).getMonth()+1}`:new Date(isoTime).getMonth()+1;
        let getYear = new Date(isoTime).getFullYear();
        let getHour = new Date(isoTime).getHours() < 10 ? `0${new Date(isoTime).getHours()}` : new Date(isoTime).getHours();
        let getMinute = new Date(isoTime).getMinutes() < 10 ? `0${new Date(isoTime).getMinutes()}` : new Date(isoTime).getMinutes();;
        let getSecond = new Date(isoTime).getSeconds() < 10 ? `0${new Date(isoTime).getSeconds()}` : new Date(isoTime).getSeconds();;
        let result;
        if(time==undefined){
            result = `${getDate}/${getMonth}/${getYear}`;
        }else{
            result = `${getDate}/${getMonth}/${getYear} ${getHour}:${getMinute}:${getSecond}`;
        } 
        return result;
    }
    function decodeDatetime(isoTime){
        let getMonth = new Date(isoTime).getMonth()+1 < 10?`0${new Date(isoTime).getMonth()+1}`:new Date(isoTime).getMonth()+1;
        let getYear = new Date(isoTime).getFullYear();
        let result = `${getYear}${getMonth}`;
        return result;
    }
    function convertDateTimeDB(isoTime){
        let getDate = new Date(isoTime).getDate() < 10 ? `0${new Date(isoTime).getDate()}` : new Date(isoTime).getDate();
        let getMonth = new Date(isoTime).getMonth()+1 < 10?`0${new Date(isoTime).getMonth()+1}`:new Date(isoTime).getMonth()+1;
        let getYear = new Date(isoTime).getFullYear();
        let result = `${getYear}-${getMonth}-${getDate}`;
        return result;
    }
    function getCookie(cookieName) {
        var cookieValue = document.cookie;
        var cookieStart = cookieValue.indexOf(cookieName + '=');
        if (cookieStart === -1) {
            return null; // Cookie not found
        }
        cookieStart = cookieValue.indexOf('=', cookieStart) + 1;
        var cookieEnd = cookieValue.indexOf(';', cookieStart);
        if (cookieEnd === -1) {
            cookieEnd = cookieValue.length;
        }
        return decodeURIComponent(cookieValue.substring(cookieStart, cookieEnd));
    }
    function doiSoThanhChu(number){
        let arrNumber = `${number}`.split(",");
        switch(arrNumber.length){
            case 1:
                return phanChiaCoBan(number);
                break;
            case 2:
                return `${phanChiaCoBan(arrNumber[0])} nghìn ${phanChiaCoBan(arrNumber[1])}`;
                break;
            case 3:
                return `${phanChiaCoBan(arrNumber[0])} triệu ${phanChiaCoBan(arrNumber[1])} nghìn ${phanChiaCoBan(arrNumber[2])}`;
                break;
            case 4:
                return `${phanChiaCoBan(arrNumber[0])} tỷ ${phanChiaCoBan(arrNumber[1])} triệu ${phanChiaDonViTram(arrNumber[2])} nghìn ${phanChiaCoBan(arrNumber[3])}`;
                break;
        }
    }
    function phanChiaCoBan(number){
        let arrNumber = `${number}`.split("");
        let result = "";
        switch(arrNumber.length){
            case 1:
                result = phanChiaDonVi(number);
                break;
            case 2:
                result = phanChiaDonViChuc(number);
                break;
            case 3:
                result = phanChiaDonViTram(number);
                break;
            default:
                break;
        }   
        return result;    
    }
    
    function phanChiaDonViTram(number){
        let arrNumber = `${number}`.split("");
        console.log()
        if(arrNumber.length == 3){
            return `${phanChiaDonVi(+arrNumber[0])} trăm ${+arrNumber[1]==0 ? `${arrNumber[2]!=0?`linh ${phanChiaDonVi(+arrNumber[2])}`:``}`: phanChiaDonViChuc(+`${arrNumber[1]}${arrNumber[2]}`)}`
        }
    }

    function phanChiaDonViChuc(number){
        let arrNumber = `${number}`.split("");
        if(arrNumber.length == 2){
            let donVi = {
                0: "",
                1: arrNumber[0] > 1?"mốt":"một",
                2: "hai",
                3: "ba",
                4: "bốn",
                5: "lăm",
                6: "sáu",
                7: "bảy",
                8: "tám",
                9: "chín"
            }
            let chuc = {
                1: "mười",
                2: "hai mươi",
                3: "ba mươi",
                4: "bốn mươi",
                5: "năm mươi",
                6: "sáu mươi",
                7: "bảy mươi",
                8: "tám mươi",
                9: "chín mươi"
            }
            return `${chuc[arrNumber[0]]} ${donVi[arrNumber[1]]}`;
        }
    }

    function phanChiaDonVi(number){
        if(number<10){
            let donVi = {
                0: "không",
                1: "một",
                2: "hai",
                3: "ba",
                4: "bốn",
                5: "năm",
                6: "sáu",
                7: "bảy",
                8: "tám",
                9: "chín"
            }
            return donVi[number]
        }
    }

    function doiSoThanhLaMa(number){
        let obj = {
            1: "I",
            2: "II",
            3: "III",
            4: "IV",
            5: "V",
            6: "VI",
            7: "VII",
            8: "VIII",
            9: "IX",
            10: "X"
        }
        if(number<=39 && number >=1){
            if(number<=10){
                return obj[number];
            }else{
                let thuong = number/10;
                let arrThuong = [];
                for(let i=1; i<=thuong; i++){
                    arrThuong.push(10);
                }
                number % 10 != 0 ? arrThuong.push(number % 10):"";
                let soLaMa = ""
                arrThuong.map(item=>{
                    soLaMa+=obj[item];
                })
                return soLaMa
            }
        }
    }
    
</script>